info from challenge page
#####################
#####################
#####################
Object Oriented Programming: Iterate Over All Properties
You have now seen two kinds of properties: own properties and prototype properties.
Own properties are defined directly on the object instance itself. And prototype properties
are defined on the prototype.

function Bird(name) {
  this.name = name; //own property
}

Bird.prototype.numLegs = 2; // prototype property

let duck = new Bird("Donald");
Here is how you add duckâ€™s own properties to the array ownProps and prototype
properties to the array prototypeProps:

let ownProps = [];
let prototypeProps = [];

for (let property in duck) {
  if(duck.hasOwnProperty(property)) {
    ownProps.push(property);
  } else {
    prototypeProps.push(property);
  }
}

console.log(ownProps); // prints ["name"]
console.log(prototypeProps); // prints ["numLegs"]

Add all of the own properties of beagle to the array ownProps. Add all of the
prototype properties of Dog to the array prototypeProps.

The ownProps array should include "name".
The prototypeProps array should include "numLegs".
Solve this challenge without using the built in method Object.keys().

#####################
#####################
#####################
original location of challenge
URL
https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/object-oriented-programming/iterate-over-all-properties
#####################
#####################
#####################
below is the original code that comes along with this challenge
CODE
function Dog(name) {
  this.name = name;
}

Dog.prototype.numLegs = 4;

let beagle = new Dog("Snoopy");

let ownProps = [];
let prototypeProps = [];

// Add your code below this line
