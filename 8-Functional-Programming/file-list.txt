00-Introduction-to-the-Functional-Programming-Challenges
01-Learn-About-Functional-Programming
02-Understand-Functional-Programming-Terminology
03-Understand-the-Hazards-of-Using-Imperative-Code
04-Avoid-Mutations-and-Side-Effects-Using-Functional-Programming
05-Pass-Arguments-to-Avoid-External-Dependence-in-a-Function
06-Refactor-Global-Variables-Out-of-Functions
07-Use-the-map-Method-to-Extract-Data-from-an-Array
08-Implement-map-on-a-Prototype
09-Use-the-filter-Method-to-Extract-Data-from-an-Array
10-Implement-the-filter-Method-on-a-Prototype
11-Return-Part-of-an-Array-Using-the-slice-Method
12-Remove-Elements-from-an-Array-Using-slice-Instead-of-splice
13-Combine-Two-Arrays-Using-the-concat-Method
14-Add-Elements-to-the-End-of-an-Array-Using-concat-Instead-of-push
15-Use-the-reduce-Method-to-Analyze-Data
16-Sort-an-Array-Alphabetically-using-the-sort-Method
17-Return-a-Sorted-Array-Without-Changing-the-Original-Array
18-Split-a-String-into-an-Array-Using-the-split-Method
19-Combine-an-Array-into-a-String-Using-the-join-Method
20-Apply-Functional-Programming-to-Convert-Strings-to-URL-Slugs
21-Use-the-every-Method-to-Check-that-Every-Element-in-an-Array-Meets-a-Criteria
22-Use-the-some-Method-to-Check-that-Any-Elements-in-an-Array-Meet-a-Criteria
23-Introduction-to-Currying-and-Partial-Application
