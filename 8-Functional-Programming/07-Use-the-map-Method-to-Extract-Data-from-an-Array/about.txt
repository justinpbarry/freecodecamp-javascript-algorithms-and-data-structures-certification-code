info from challenge page
#####################
#####################
#####################
Functional Programming: Use the map Method to Extract Data from an Array
So far we have learned to use pure functions to avoid side effects in a program.
Also, we have seen the value in having a function only depend on its input arguments.

This is only the beginning. As its name suggests, functional programming is centered
around a theory of functions.

It would make sense to be able to pass them as arguments to other functions, and
return a function from another function. Functions are considered First Class Objects
in JavaScript, which means they can be used like any other object. They can be saved
in variables, stored in an object, or passed as function arguments.

Let's start with some simple array functions, which are methods on the array object
prototype. In this exercise we are looking at Array.prototype.map(), or more simply map.

Remember that the map method is a way to iterate over each item in an array. It
creates a new array (without changing the original one) after applying a callback
function to every element.


The watchList array holds objects with information on several movies. Use map to pull
the title and rating from watchList and save the new array in the rating variable.
The code in the editor currently uses a for loop to do this, replace the loop functionality
 with your map expression.

The watchList variable should not change.
Your code should not use a for loop.
Your code should use the map method.
rating should equal [{"title":"Inception","rating":"8.8"},{"title":"Interstellar","rating":"8.6"},{"title":"The Dark Knight","rating":"9.0"},{"title":"Batman Begins","rating":"8.3"},{"title":"Avatar","rating":"7.9"}].

#####################
#####################
#####################
original location of challenge
URL

#####################
#####################
#####################
below is the original code that comes along with this challenge
CODE
